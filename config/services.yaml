parameters:
  locale: 'en'
  project_name: paella_core
  receive_invoices_sns_topic_arn: '%env(RECEIVE_INVOICES_SNS_TOPIC_ARN)%'
  billie_monitoring_slack_webhook_url: '%env(SLACK_WEBHOOK_URL)%'
  smaug_client_id: '%env(string:SMAUG_CLIENT_ID)%'
  smaug_client_secret: '%env(string:SMAUG_CLIENT_SECRET)%'
  redoc_js_url: 'https://cdn.jsdelivr.net/npm/redoc@v2.0.0-rc.23/bundles/redoc.standalone.js'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      $producer: '@old_sound_rabbit_mq.paella_events_producer'
      $delayedProducer: '@old_sound_rabbit_mq.paella_delayed_events_producer'
      $invoiceUploadHandlers:
        ftp: '@App\Infrastructure\Sns\SnsInvoiceUploadHandler'
        http: '@App\Infrastructure\OrderInvoice\HttpInvoiceUploadHandler'
        none: '@App\DomainModel\OrderInvoice\UselessInvoiceUploadHandler'
      $snsInvoiceUploadTopicArn: '%receive_invoices_sns_topic_arn%'
      $invoiceDownloadClient: '@eight_points_guzzle.client.invoice_download'
      $alfredClient: '@eight_points_guzzle.client.alfred'
      $jarvisClient: '@eight_points_guzzle.client.jarvis'
      $borschtClient: '@eight_points_guzzle.client.borscht'
      $smaugClient: '@eight_points_guzzle.client.smaug'
      $nachosClient: '@eight_points_guzzle.client.nachos'
      $limesClient: '@eight_points_guzzle.client.limes'
      $notificationSenderClient: '@eight_points_guzzle.client.webhook'
      $salesforceClient: '@eight_points_guzzle.client.salesforce'
      $paellaSandboxClient: '@eight_points_guzzle.client.paella_sandbox'
      $webappClient: '@eight_points_guzzle.client.webapp'
      $bicLookupClient: '@eight_points_guzzle.client.fintech_toolbox'
      $documentGeneratorClient: '@eight_points_guzzle.client.document_generator'
      $watsonClient: '@eight_points_guzzle.client.watson'
      $projectRootDir: '%kernel.root_dir%/..'
      $smaugClientId: '%smaug_client_id%'
      $smaugClientSecret: '%smaug_client_secret%'
      $resourcesFileReader: '@resources_file_reader'
      $apiSpecFileReader: '@api_spec_file_reader'
      $investorUuid: '%env(string:INVESTOR_UUID)%'
      $orderWorkflow: '@state_machine.order'
      $onboardingStepWorkflow: '@state_machine.merchant_onboarding_step'
      $onboardingWorkflow: '@state_machine.merchant_onboarding'
      $debtorInformationChangeRequestWorkflow: '@state_machine.debtor_information_change_request'
      $segmentIoProvider: '@segment_io.analytics'
      $redocJsUrl: '%redoc_js_url%'

  _instanceof:
    App\Application\UseCase\ValidatedUseCaseInterface:
      calls:
        - [setValidator, ['@Symfony\Component\Validator\Validator\ValidatorInterface']]

  App\:
    resource: '../src/*'
    exclude: '../src/{Resources,Entity,Migrations,Tests,Test,Kernel.php}'

  App\Http\Controller\:
    resource: '../src/Http/Controller'
    tags: ['controller.service_arguments']

  Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter: '@serializer.name_converter.camel_case_to_snake_case'

  resources_file_reader:
    class: App\Infrastructure\OpenApi\RelativeFileReader
    arguments:
      - '%kernel.root_dir%/Resources'

  api_spec_file_reader:
    class: App\Infrastructure\OpenApi\RelativeFileReader
    arguments:
      - '%kernel.root_dir%/../docs/openapi'

  openapi_file_locator:
    class: Symfony\Component\HttpKernel\Config\FileLocator
    arguments:
      - '@kernel'
      - '%kernel.root_dir%/Resources'
      -
        - '%kernel.root_dir%'
        - '%kernel.root_dir%/..'

  App\Infrastructure\OpenApi\Routing\OpenApiClassLoader:
    tags: [routing.loader]

  App\Infrastructure\OpenApi\Routing\OpenApiFileLoader:
    tags: [routing.loader]
    arguments:
      - '@openapi_file_locator'
      - '@App\Infrastructure\OpenApi\Routing\OpenApiClassLoader'

  App\Infrastructure\OpenApi\Routing\OpenApiDirectoryLoader:
    tags: [routing.loader]
    arguments:
      - '@openapi_file_locator'
      - '@App\Infrastructure\OpenApi\Routing\OpenApiClassLoader'

  App\Helper\Uuid\UuidGeneratorInterface: '@App\Helper\Uuid\UuidGenerator'
  App\DomainModel\Payment\PaymentsRepositoryInterface: '@App\Infrastructure\Graphql\PaymentsGraphQLRepository'

  App\DomainModel\Order\OrderChecksRunnerService:
    arguments:
      $preIdentificationChecks:
        - 'available_financing_limit'
        - 'amount'
        - 'line_items'
        - 'debtor_country'
        - 'debtor_industry_sector'
      $postIdentificationChecks:
        - 'debtor_identified'
        - 'debtor_identified_strict'
        - 'debtor_identified_billing_address'
        - 'delivery_address'
        - 'debtor_is_trusted'
        - 'debtor_not_customer'
        - 'debtor_blacklisted'
        - 'debtor_overdue'
        - 'limit'
        - 'company_b2b_score'
      $checkLoader: !service
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']
        arguments:
          -
            amount: '@App\DomainModel\OrderRiskCheck\Checker\AmountCheck'
            debtor_country: '@App\DomainModel\OrderRiskCheck\Checker\DebtorCountryCheck'
            debtor_industry_sector: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIndustrySectorCheck'
            debtor_not_customer: '@App\DomainModel\OrderRiskCheck\Checker\DebtorNotCustomerCheck'
            debtor_overdue: '@App\DomainModel\OrderRiskCheck\Checker\DebtorOverdueCheck'
            debtor_blacklisted: '@App\DomainModel\OrderRiskCheck\Checker\DebtorBlacklistedCheck'
            available_financing_limit: '@App\DomainModel\OrderRiskCheck\Checker\AvailableFinancingLimitCheck'
            company_b2b_score: '@App\DomainModel\OrderRiskCheck\Checker\DebtorScoreCheck'
            limit: '@App\DomainModel\OrderRiskCheck\Checker\LimitCheck'
            line_items: '@App\DomainModel\OrderRiskCheck\Checker\LineItemsCheck'
            debtor_identified: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIdentifiedCheck'
            debtor_identified_strict: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIdentifiedStrictCheck'
            debtor_identified_billing_address: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIdentifiedBillingAddressCheck'
            debtor_is_trusted: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIsTrusted'
            delivery_address: '@App\DomainModel\OrderRiskCheck\Checker\DeliveryAddressCheck'

  App\Infrastructure\Repository\OrderStateTransitionRepository:
    tags:
      - { name: billie_pdo.state_transition_repository, entity: App\DomainModel\Order\OrderStateTransitionEntity }

  App\Infrastructure\Repository\MerchantOnboarding\MerchantOnboardingTransitionRepository:
    tags:
      - { name: billie_pdo.state_transition_repository, entity: App\DomainModel\MerchantOnboarding\MerchantOnboardingTransitionEntity }

  App\Infrastructure\Repository\MerchantOnboarding\MerchantOnboardingStepTransitionRepository:
    tags:
      - { name: billie_pdo.state_transition_repository, entity: App\DomainModel\MerchantOnboarding\MerchantOnboardingStepTransitionEntity }

  App\Infrastructure\Repository\DebtorInformationChangeRequestTransitionRepository:
    tags:
      - { name: billie_pdo.state_transition_repository, entity: App\DomainModel\DebtorInformationChangeRequest\DebtorInformationChangeRequestTransitionEntity }
