parameters:
  locale: 'en'
  google_cloud_project_id: bbox-150315
  google_cloud_credentials_file_path: '%kernel.root_dir%/../config/secrets/gcloud.json'
  project_name: paella_core
  receive_invoices_sns_topic_arn: '%env(RECEIVE_INVOICES_SNS_TOPIC_ARN)%'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  _instanceof:
    App\Infrastructure\Repository\AbstractRepository:
      tags: ['paella_core.repository']

    App\DomainModel\Monitoring\LoggingInterface:
      tags: ['paella_core.logging']

  App\:
    resource: '../src/*'
    exclude: '../src/{Entity,Migrations,Tests,Test,Kernel.php}'

  App\Http\Controller\:
    resource: '../src/Http/Controller'
    tags: ['controller.service_arguments']

  App\Infrastructure\PDO\PDO:
    lazy: true
    arguments:
      - 'mysql:dbname=%env(DATABASE_NAME)%;host=%env(DATABASE_HOST)%;charset=UTF8'
      - '%env(DATABASE_USERNAME)%'
      - '%env(DATABASE_PASSWORD)%'

  App\Infrastructure\Risky\Risky:
    arguments:
      $client: '@eight_points_guzzle.client.risky'

  App\Infrastructure\Alfred\Alfred:
    arguments:
      $client: '@eight_points_guzzle.client.alfred'

  App\Infrastructure\Borscht\Borscht:
    arguments:
      $client: '@eight_points_guzzle.client.borscht'

  App\Infrastructure\Client\Guzzle\WebhookClient:
    arguments:
      $client: '@eight_points_guzzle.client.webhook'

  App\DomainModel\Order\OrderRepositoryInterface: '@App\Infrastructure\Repository\OrderRepository'
  App\DomainModel\Address\AddressRepositoryInterface: '@App\Infrastructure\Repository\AddressRepository'
  App\DomainModel\Person\PersonRepositoryInterface: '@App\Infrastructure\Repository\PersonRepository'
  App\DomainModel\DebtorExternalData\DebtorExternalDataInterface: '@App\Infrastructure\Repository\DebtorExternalData'
  App\DomainModel\Customer\MerchantRepositoryInterface: '@App\Infrastructure\Repository\MerchantRepository'
  App\DomainModel\Customer\MerchantDebtorRepositoryInterface: '@App\Infrastructure\Repository\MerchantDebtorRepository'
  App\DomainModel\Customer\RiskCheckRepositoryInterface: '@App\Infrastructure\Repository\RiskCheckRepository'
  App\DomainModel\OrderTransition\OrderTransitionRepositoryInterface: '@App\Infrastructure\Repository\OrderTransitionRepository'

  App\DomainModel\Webhook\WebhookClientInterface: '@App\Infrastructure\Client\Guzzle\WebhookClient'
  App\DomainModel\Alfred\AlfredInterface: '@App\Infrastructure\Alfred\Alfred'
  App\DomainModel\Borscht\BorschtInterface: '@App\Infrastructure\Borscht\Borscht'
  App\DomainModel\Risky\RiskyInterface: '@App\Infrastructure\Risky\Risky'

  Symfony\Component\Workflow\Workflow: '@state_machine.order'

  OldSound\RabbitMqBundle\RabbitMq\ProducerInterface: '@old_sound_rabbit_mq.paella_events_producer'

  App\DomainModel\Order\OrderChecksRunnerService:
    arguments:
      $checkLoader: !service
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']
        arguments:
          -
            amount: '@App\DomainModel\RiskCheck\Checker\AmountCheck'
            debtor_country: '@App\DomainModel\RiskCheck\Checker\DebtorCountryCheck'
            debtor_industry_sector: '@App\DomainModel\RiskCheck\Checker\DebtorIndustrySectorCheck'
            debtor_not_customer: '@App\DomainModel\RiskCheck\Checker\DebtorNotCustomerCheck'
            debtor_overdue: '@App\DomainModel\RiskCheck\Checker\DebtorOverdueCheck'
            debtor_name: '@App\DomainModel\RiskCheck\Checker\DebtorNameCheck'
            debtor_address: '@App\DomainModel\RiskCheck\Checker\DebtorAddressCheck'
            debtor_blacklisted: '@App\DomainModel\RiskCheck\Checker\DebtorBlacklistedCheck'

  # monitoring
  App\Infrastructure\Monitoring\Sentry\SentrySubscriber:
    arguments:
      $env: '%env(INSTANCE_SUFFIX)%'

  Raven_Client:
    class: Raven_Client
    arguments:
      - '%env(SENTRY_DSN)%'

  App\Infrastructure\Monitoring\StackdriverLogHandler:
    arguments:
      $loggingClient: !service
        class: Google\Cloud\Logging\LoggingClient
        arguments:
          -
            projectId: '%google_cloud_project_id%'
            keyFilePath: '%google_cloud_credentials_file_path%'
      $env: '%env(INSTANCE_SUFFIX)%'
      $channel: '%project_name%'

  App\Infrastructure\Monitoring\Controller\:
    resource: '../src/Infrastructure/Monitoring/Controller'
    tags: ['controller.service_arguments']
    bind:
      $projectName: '%project_name%'
  # end of monitoring

  App\Infrastructure\Sns\InvoiceDownloadEventPublisher:
    arguments:
      - '@aws.sns'
      - '%receive_invoices_sns_topic_arn%'
