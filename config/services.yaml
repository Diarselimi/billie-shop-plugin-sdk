parameters:
  locale: 'en'
  google_cloud_project_id: bbox-150315
  google_cloud_credentials_file_path: '%kernel.root_dir%/../config/secrets/gcloud.json'
  project_name: paella_core
  receive_invoices_sns_topic_arn: '%env(RECEIVE_INVOICES_SNS_TOPIC_ARN)%'
  billie_monitoring_slack_webhook_url: '%env(SLACK_WEBHOOK_URL)%'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      $producer: '@old_sound_rabbit_mq.paella_events_producer'
      $delayedProducer: '@old_sound_rabbit_mq.paella_delayed_events_producer'
      $invoiceUploadHandlers:
        ftp: '@App\Infrastructure\Sns\SnsInvoiceUploadHandler'
        none: '@App\DomainModel\OrderInvoice\UselessInvoiceUploadHandler'
      $snsInvoiceUploadTopicArn: '%receive_invoices_sns_topic_arn%'

  _instanceof:
    App\Application\UseCase\ValidatedUseCaseInterface:
      calls:
        - [setValidator, ['@Symfony\Component\Validator\Validator\ValidatorInterface']]

  App\:
    resource: '../src/*'
    exclude: '../src/{Entity,Migrations,Tests,Test,Kernel.php}'

  App\Http\Controller\:
    resource: '../src/Http/Controller'
    tags: ['controller.service_arguments']

  App\Infrastructure\Alfred\Alfred:
    arguments:
      $client: '@eight_points_guzzle.client.alfred'

  App\Infrastructure\Borscht\Borscht:
    arguments:
      $client: '@eight_points_guzzle.client.borscht'

  App\Infrastructure\OrderNotification\NotificationSender:
    arguments:
      $client: '@eight_points_guzzle.client.webhook'

  App\Infrastructure\Smaug\Smaug:
    arguments:
      $client: '@eight_points_guzzle.client.smaug'

  Symfony\Component\Workflow\Workflow: '@state_machine.order'

  Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter: '@serializer.name_converter.camel_case_to_snake_case'

  App\DomainModel\Order\OrderChecksRunnerService:
    arguments:
      $preIdentificationChecks:
        - 'available_financing_limit'
        - 'amount'
        - 'debtor_country'
        - 'debtor_industry_sector'
      $postIdentificationChecks:
        - 'debtor_identified'
        - 'debtor_is_trusted'
        - 'limit'
        - 'debtor_not_customer'
        - 'debtor_name'
        - 'debtor_address_street_match'
        - 'debtor_address_house_match'
        - 'debtor_address_postal_code_match'
        - 'debtor_blacklisted'
        - 'debtor_overdue'
        - 'company_b2b_score'
      $checkLoader: !service
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']
        arguments:
          -
            amount: '@App\DomainModel\OrderRiskCheck\Checker\AmountCheck'
            debtor_country: '@App\DomainModel\OrderRiskCheck\Checker\DebtorCountryCheck'
            debtor_industry_sector: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIndustrySectorCheck'
            debtor_not_customer: '@App\DomainModel\OrderRiskCheck\Checker\DebtorNotCustomerCheck'
            debtor_overdue: '@App\DomainModel\OrderRiskCheck\Checker\DebtorOverdueCheck'
            debtor_name: '@App\DomainModel\OrderRiskCheck\Checker\DebtorNameCheck'
            debtor_address_street_match: '@App\DomainModel\OrderRiskCheck\Checker\DebtorAddressStreetMatchCheck'
            debtor_address_house_match: '@App\DomainModel\OrderRiskCheck\Checker\DebtorAddressHouseMatchCheck'
            debtor_address_postal_code_match: '@App\DomainModel\OrderRiskCheck\Checker\DebtorAddressPostalCodeMatchCheck'
            debtor_blacklisted: '@App\DomainModel\OrderRiskCheck\Checker\DebtorBlacklistedCheck'
            available_financing_limit: '@App\DomainModel\OrderRiskCheck\Checker\AvailableFinancingLimitCheck'
            company_b2b_score: '@App\DomainModel\OrderRiskCheck\Checker\DebtorScoreCheck'
            limit: '@App\DomainModel\OrderRiskCheck\Checker\LimitCheck'
            debtor_identified: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIdentifiedCheck'
            debtor_is_trusted: '@App\DomainModel\OrderRiskCheck\Checker\DebtorIsTrusted'
