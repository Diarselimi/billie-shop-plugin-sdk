old_sound_rabbit_mq:
  connections:
    default:
      host:     "%env(RABBITMQ_HOST)%"
      port:     5672
      user:     "%env(RABBITMQ_USERNAME)%"
      password: "%env(RABBITMQ_PASSWORD)%"
      vhost:    '/'
      lazy:     true
      connection_timeout: 3
      read_write_timeout: 3
      keepalive: false
      heartbeat: 0
      use_socket: false
  consumers:
    order_payment_state_change:
      connection:       default
      exchange_options: { name: 'borscht_events%env(INSTANCE_SUFFIX)%', type: direct }
      queue_options:    { name: 'order_payment_state_change%env(INSTANCE_SUFFIX)%', routing_keys: ['state_change'] }
      callback:         App\Amqp\Consumer\OrderPaymentStateChangeConsumer
      qos_options:      {prefetch_size: 0, prefetch_count: 1, global: false}
    order_payment_amount_change:
      connection:       default
      exchange_options: { name: 'borscht_events%env(INSTANCE_SUFFIX)%', type: direct }
      queue_options:    { name: 'order_payment_amount_change_paella%env(INSTANCE_SUFFIX)%', routing_keys: ['amount_change'] }
      callback:         App\Amqp\Consumer\OrderOutstandingAmountChangeConsumer
      qos_options:      {prefetch_size: 0, prefetch_count: 1, global: false}
    risk_check_result:
      connection:       default
      exchange_options: { name: 'risky_events%env(INSTANCE_SUFFIX)%', type: direct }
      queue_options:    { name: 'risk_check_result_paella%env(INSTANCE_SUFFIX)%', routing_keys: ['risk_check_result_paella'] }
      callback:         App\Amqp\Consumer\RiskCheckResultConsumer
      qos_options:      {prefetch_size: 0, prefetch_count: 1, global: false}
    notification_delivery:
      connection:       default
      exchange_options: { name: 'paella_delayed_events%env(INSTANCE_SUFFIX)%', type: 'x-delayed-message', arguments: {x-delayed-type: ['S', 'direct']} }
      queue_options:    { name: 'notification_delivery_paella%env(INSTANCE_SUFFIX)%', routing_keys: ['notification_delivery_paella'] }
      callback:         App\Amqp\Consumer\NotificationDeliveryConsumer
  producers:
    paella_events:
      connection:       default
      exchange_options: { name: 'paella_events%env(INSTANCE_SUFFIX)%', type: direct }
    paella_delayed_events:
      connection:       default
      exchange_options: { name: 'paella_delayed_events%env(INSTANCE_SUFFIX)%', type: 'x-delayed-message', arguments: {x-delayed-type: ['S', 'direct']} }

